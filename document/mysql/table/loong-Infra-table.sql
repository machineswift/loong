/*************************************************************************************************/
/**************************************** camunda ************************************************/
/*************************************************************************************************/

SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for ACT_GE_BYTEARRAY
-- ----------------------------
DROP TABLE IF EXISTS `ACT_GE_BYTEARRAY`;
CREATE TABLE `ACT_GE_BYTEARRAY` (
  `ID_` varchar(64)  NOT NULL,
  `REV_` int DEFAULT NULL,
  `NAME_` varchar(255)  DEFAULT NULL,
  `DEPLOYMENT_ID_` varchar(64)  DEFAULT NULL,
  `BYTES_` longblob,
  `GENERATED_` tinyint DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  `TYPE_` int DEFAULT NULL,
  `CREATE_TIME_` datetime DEFAULT NULL,
  `ROOT_PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `REMOVAL_TIME_` datetime DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_FK_BYTEARR_DEPL` (`DEPLOYMENT_ID_`),
  KEY `ACT_IDX_BYTEARRAY_ROOT_PI` (`ROOT_PROC_INST_ID_`),
  KEY `ACT_IDX_BYTEARRAY_RM_TIME` (`REMOVAL_TIME_`),
  KEY `ACT_IDX_BYTEARRAY_NAME` (`NAME_`),
  CONSTRAINT `ACT_FK_BYTEARR_DEPL` FOREIGN KEY (`DEPLOYMENT_ID_`) REFERENCES `ACT_RE_DEPLOYMENT` (`ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_GE_PROPERTY
-- ----------------------------
DROP TABLE IF EXISTS `ACT_GE_PROPERTY`;
CREATE TABLE `ACT_GE_PROPERTY` (
  `NAME_` varchar(64)  NOT NULL,
  `VALUE_` varchar(300)  DEFAULT NULL,
  `REV_` int DEFAULT NULL,
  PRIMARY KEY (`NAME_`)
) ;

-- ----------------------------
-- Table structure for ACT_GE_SCHEMA_LOG
-- ----------------------------
DROP TABLE IF EXISTS `ACT_GE_SCHEMA_LOG`;
CREATE TABLE `ACT_GE_SCHEMA_LOG` (
  `ID_` varchar(64)  NOT NULL,
  `TIMESTAMP_` datetime DEFAULT NULL,
  `VERSION_` varchar(255)  DEFAULT NULL,
  PRIMARY KEY (`ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_HI_ACTINST
-- ----------------------------
DROP TABLE IF EXISTS `ACT_HI_ACTINST`;
CREATE TABLE `ACT_HI_ACTINST` (
  `ID_` varchar(64)  NOT NULL,
  `PARENT_ACT_INST_ID_` varchar(64)  DEFAULT NULL,
  `PROC_DEF_KEY_` varchar(255)  DEFAULT NULL,
  `PROC_DEF_ID_` varchar(64)  NOT NULL,
  `ROOT_PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `PROC_INST_ID_` varchar(64)  NOT NULL,
  `EXECUTION_ID_` varchar(64)  NOT NULL,
  `ACT_ID_` varchar(255)  NOT NULL,
  `TASK_ID_` varchar(64)  DEFAULT NULL,
  `CALL_PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `CALL_CASE_INST_ID_` varchar(64)  DEFAULT NULL,
  `ACT_NAME_` varchar(255)  DEFAULT NULL,
  `ACT_TYPE_` varchar(255)  NOT NULL,
  `ASSIGNEE_` varchar(255)  DEFAULT NULL,
  `START_TIME_` datetime NOT NULL,
  `END_TIME_` datetime DEFAULT NULL,
  `DURATION_` bigint DEFAULT NULL,
  `ACT_INST_STATE_` int DEFAULT NULL,
  `SEQUENCE_COUNTER_` bigint DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  `REMOVAL_TIME_` datetime DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_HI_ACTINST_ROOT_PI` (`ROOT_PROC_INST_ID_`),
  KEY `ACT_IDX_HI_ACT_INST_START_END` (`START_TIME_`,`END_TIME_`),
  KEY `ACT_IDX_HI_ACT_INST_END` (`END_TIME_`),
  KEY `ACT_IDX_HI_ACT_INST_PROCINST` (`PROC_INST_ID_`,`ACT_ID_`),
  KEY `ACT_IDX_HI_ACT_INST_COMP` (`EXECUTION_ID_`,`ACT_ID_`,`END_TIME_`,`ID_`),
  KEY `ACT_IDX_HI_ACT_INST_STATS` (`PROC_DEF_ID_`,`PROC_INST_ID_`,`ACT_ID_`,`END_TIME_`,`ACT_INST_STATE_`),
  KEY `ACT_IDX_HI_ACT_INST_TENANT_ID` (`TENANT_ID_`),
  KEY `ACT_IDX_HI_ACT_INST_PROC_DEF_KEY` (`PROC_DEF_KEY_`),
  KEY `ACT_IDX_HI_AI_PDEFID_END_TIME` (`PROC_DEF_ID_`,`END_TIME_`),
  KEY `ACT_IDX_HI_ACT_INST_RM_TIME` (`REMOVAL_TIME_`)
) ;

-- ----------------------------
-- Table structure for ACT_HI_ATTACHMENT
-- ----------------------------
DROP TABLE IF EXISTS `ACT_HI_ATTACHMENT`;
CREATE TABLE `ACT_HI_ATTACHMENT` (
  `ID_` varchar(64)  NOT NULL,
  `REV_` int DEFAULT NULL,
  `USER_ID_` varchar(255)  DEFAULT NULL,
  `NAME_` varchar(255)  DEFAULT NULL,
  `DESCRIPTION_` varchar(4000)  DEFAULT NULL,
  `TYPE_` varchar(255)  DEFAULT NULL,
  `TASK_ID_` varchar(64)  DEFAULT NULL,
  `ROOT_PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `URL_` varchar(4000)  DEFAULT NULL,
  `CONTENT_ID_` varchar(64)  DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  `CREATE_TIME_` datetime DEFAULT NULL,
  `REMOVAL_TIME_` datetime DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_HI_ATTACHMENT_CONTENT` (`CONTENT_ID_`),
  KEY `ACT_IDX_HI_ATTACHMENT_ROOT_PI` (`ROOT_PROC_INST_ID_`),
  KEY `ACT_IDX_HI_ATTACHMENT_PROCINST` (`PROC_INST_ID_`),
  KEY `ACT_IDX_HI_ATTACHMENT_TASK` (`TASK_ID_`),
  KEY `ACT_IDX_HI_ATTACHMENT_RM_TIME` (`REMOVAL_TIME_`)
) ;

-- ----------------------------
-- Table structure for ACT_HI_BATCH
-- ----------------------------
DROP TABLE IF EXISTS `ACT_HI_BATCH`;
CREATE TABLE `ACT_HI_BATCH` (
  `ID_` varchar(64)  NOT NULL,
  `TYPE_` varchar(255)  DEFAULT NULL,
  `TOTAL_JOBS_` int DEFAULT NULL,
  `JOBS_PER_SEED_` int DEFAULT NULL,
  `INVOCATIONS_PER_JOB_` int DEFAULT NULL,
  `SEED_JOB_DEF_ID_` varchar(64)  DEFAULT NULL,
  `MONITOR_JOB_DEF_ID_` varchar(64)  DEFAULT NULL,
  `BATCH_JOB_DEF_ID_` varchar(64)  DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  `CREATE_USER_ID_` varchar(255)  DEFAULT NULL,
  `START_TIME_` datetime NOT NULL,
  `END_TIME_` datetime DEFAULT NULL,
  `REMOVAL_TIME_` datetime DEFAULT NULL,
  `EXEC_START_TIME_` datetime DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_HI_BAT_RM_TIME` (`REMOVAL_TIME_`)
) ;

-- ----------------------------
-- Table structure for ACT_HI_CASEACTINST
-- ----------------------------
DROP TABLE IF EXISTS `ACT_HI_CASEACTINST`;
CREATE TABLE `ACT_HI_CASEACTINST` (
  `ID_` varchar(64)  NOT NULL,
  `PARENT_ACT_INST_ID_` varchar(64)  DEFAULT NULL,
  `CASE_DEF_ID_` varchar(64)  NOT NULL,
  `CASE_INST_ID_` varchar(64)  NOT NULL,
  `CASE_ACT_ID_` varchar(255)  NOT NULL,
  `TASK_ID_` varchar(64)  DEFAULT NULL,
  `CALL_PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `CALL_CASE_INST_ID_` varchar(64)  DEFAULT NULL,
  `CASE_ACT_NAME_` varchar(255)  DEFAULT NULL,
  `CASE_ACT_TYPE_` varchar(255)  DEFAULT NULL,
  `CREATE_TIME_` datetime NOT NULL,
  `END_TIME_` datetime DEFAULT NULL,
  `DURATION_` bigint DEFAULT NULL,
  `STATE_` int DEFAULT NULL,
  `REQUIRED_` tinyint(1) DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_HI_CAS_A_I_CREATE` (`CREATE_TIME_`),
  KEY `ACT_IDX_HI_CAS_A_I_END` (`END_TIME_`),
  KEY `ACT_IDX_HI_CAS_A_I_COMP` (`CASE_ACT_ID_`,`END_TIME_`,`ID_`),
  KEY `ACT_IDX_HI_CAS_A_I_CASEINST` (`CASE_INST_ID_`,`CASE_ACT_ID_`),
  KEY `ACT_IDX_HI_CAS_A_I_TENANT_ID` (`TENANT_ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_HI_CASEINST
-- ----------------------------
DROP TABLE IF EXISTS `ACT_HI_CASEINST`;
CREATE TABLE `ACT_HI_CASEINST` (
  `ID_` varchar(64)  NOT NULL,
  `CASE_INST_ID_` varchar(64)  NOT NULL,
  `BUSINESS_KEY_` varchar(255)  DEFAULT NULL,
  `CASE_DEF_ID_` varchar(64)  NOT NULL,
  `CREATE_TIME_` datetime NOT NULL,
  `CLOSE_TIME_` datetime DEFAULT NULL,
  `DURATION_` bigint DEFAULT NULL,
  `STATE_` int DEFAULT NULL,
  `CREATE_USER_ID_` varchar(255)  DEFAULT NULL,
  `SUPER_CASE_INSTANCE_ID_` varchar(64)  DEFAULT NULL,
  `SUPER_PROCESS_INSTANCE_ID_` varchar(64)  DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  UNIQUE KEY `CASE_INST_ID_` (`CASE_INST_ID_`),
  KEY `ACT_IDX_HI_CAS_I_CLOSE` (`CLOSE_TIME_`),
  KEY `ACT_IDX_HI_CAS_I_BUSKEY` (`BUSINESS_KEY_`),
  KEY `ACT_IDX_HI_CAS_I_TENANT_ID` (`TENANT_ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_HI_COMMENT
-- ----------------------------
DROP TABLE IF EXISTS `ACT_HI_COMMENT`;
CREATE TABLE `ACT_HI_COMMENT` (
  `ID_` varchar(64)  NOT NULL,
  `TYPE_` varchar(255)  DEFAULT NULL,
  `TIME_` datetime NOT NULL,
  `USER_ID_` varchar(255)  DEFAULT NULL,
  `TASK_ID_` varchar(64)  DEFAULT NULL,
  `ROOT_PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `ACTION_` varchar(255)  DEFAULT NULL,
  `MESSAGE_` varchar(4000)  DEFAULT NULL,
  `FULL_MSG_` longblob,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  `REMOVAL_TIME_` datetime DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_HI_COMMENT_TASK` (`TASK_ID_`),
  KEY `ACT_IDX_HI_COMMENT_ROOT_PI` (`ROOT_PROC_INST_ID_`),
  KEY `ACT_IDX_HI_COMMENT_PROCINST` (`PROC_INST_ID_`),
  KEY `ACT_IDX_HI_COMMENT_RM_TIME` (`REMOVAL_TIME_`)
) ;

-- ----------------------------
-- Table structure for ACT_HI_DECINST
-- ----------------------------
DROP TABLE IF EXISTS `ACT_HI_DECINST`;
CREATE TABLE `ACT_HI_DECINST` (
  `ID_` varchar(64)  NOT NULL,
  `DEC_DEF_ID_` varchar(64)  NOT NULL,
  `DEC_DEF_KEY_` varchar(255)  NOT NULL,
  `DEC_DEF_NAME_` varchar(255)  DEFAULT NULL,
  `PROC_DEF_KEY_` varchar(255)  DEFAULT NULL,
  `PROC_DEF_ID_` varchar(64)  DEFAULT NULL,
  `PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `CASE_DEF_KEY_` varchar(255)  DEFAULT NULL,
  `CASE_DEF_ID_` varchar(64)  DEFAULT NULL,
  `CASE_INST_ID_` varchar(64)  DEFAULT NULL,
  `ACT_INST_ID_` varchar(64)  DEFAULT NULL,
  `ACT_ID_` varchar(255)  DEFAULT NULL,
  `EVAL_TIME_` datetime NOT NULL,
  `REMOVAL_TIME_` datetime DEFAULT NULL,
  `COLLECT_VALUE_` double DEFAULT NULL,
  `USER_ID_` varchar(255)  DEFAULT NULL,
  `ROOT_DEC_INST_ID_` varchar(64)  DEFAULT NULL,
  `ROOT_PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `DEC_REQ_ID_` varchar(64)  DEFAULT NULL,
  `DEC_REQ_KEY_` varchar(255)  DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_HI_DEC_INST_ID` (`DEC_DEF_ID_`),
  KEY `ACT_IDX_HI_DEC_INST_KEY` (`DEC_DEF_KEY_`),
  KEY `ACT_IDX_HI_DEC_INST_PI` (`PROC_INST_ID_`),
  KEY `ACT_IDX_HI_DEC_INST_CI` (`CASE_INST_ID_`),
  KEY `ACT_IDX_HI_DEC_INST_ACT` (`ACT_ID_`),
  KEY `ACT_IDX_HI_DEC_INST_ACT_INST` (`ACT_INST_ID_`),
  KEY `ACT_IDX_HI_DEC_INST_TIME` (`EVAL_TIME_`),
  KEY `ACT_IDX_HI_DEC_INST_TENANT_ID` (`TENANT_ID_`),
  KEY `ACT_IDX_HI_DEC_INST_ROOT_ID` (`ROOT_DEC_INST_ID_`),
  KEY `ACT_IDX_HI_DEC_INST_REQ_ID` (`DEC_REQ_ID_`),
  KEY `ACT_IDX_HI_DEC_INST_REQ_KEY` (`DEC_REQ_KEY_`),
  KEY `ACT_IDX_HI_DEC_INST_ROOT_PI` (`ROOT_PROC_INST_ID_`),
  KEY `ACT_IDX_HI_DEC_INST_RM_TIME` (`REMOVAL_TIME_`)
) ;

-- ----------------------------
-- Table structure for ACT_HI_DEC_IN
-- ----------------------------
DROP TABLE IF EXISTS `ACT_HI_DEC_IN`;
CREATE TABLE `ACT_HI_DEC_IN` (
  `ID_` varchar(64)  NOT NULL,
  `DEC_INST_ID_` varchar(64)  NOT NULL,
  `CLAUSE_ID_` varchar(64)  DEFAULT NULL,
  `CLAUSE_NAME_` varchar(255)  DEFAULT NULL,
  `VAR_TYPE_` varchar(100)  DEFAULT NULL,
  `BYTEARRAY_ID_` varchar(64)  DEFAULT NULL,
  `DOUBLE_` double DEFAULT NULL,
  `LONG_` bigint DEFAULT NULL,
  `TEXT_` varchar(4000)  DEFAULT NULL,
  `TEXT2_` varchar(4000)  DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  `CREATE_TIME_` datetime DEFAULT NULL,
  `ROOT_PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `REMOVAL_TIME_` datetime DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_HI_DEC_IN_INST` (`DEC_INST_ID_`),
  KEY `ACT_IDX_HI_DEC_IN_CLAUSE` (`DEC_INST_ID_`,`CLAUSE_ID_`),
  KEY `ACT_IDX_HI_DEC_IN_ROOT_PI` (`ROOT_PROC_INST_ID_`),
  KEY `ACT_IDX_HI_DEC_IN_RM_TIME` (`REMOVAL_TIME_`)
) ;

-- ----------------------------
-- Table structure for ACT_HI_DEC_OUT
-- ----------------------------
DROP TABLE IF EXISTS `ACT_HI_DEC_OUT`;
CREATE TABLE `ACT_HI_DEC_OUT` (
  `ID_` varchar(64)  NOT NULL,
  `DEC_INST_ID_` varchar(64)  NOT NULL,
  `CLAUSE_ID_` varchar(64)  DEFAULT NULL,
  `CLAUSE_NAME_` varchar(255)  DEFAULT NULL,
  `RULE_ID_` varchar(64)  DEFAULT NULL,
  `RULE_ORDER_` int DEFAULT NULL,
  `VAR_NAME_` varchar(255)  DEFAULT NULL,
  `VAR_TYPE_` varchar(100)  DEFAULT NULL,
  `BYTEARRAY_ID_` varchar(64)  DEFAULT NULL,
  `DOUBLE_` double DEFAULT NULL,
  `LONG_` bigint DEFAULT NULL,
  `TEXT_` varchar(4000)  DEFAULT NULL,
  `TEXT2_` varchar(4000)  DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  `CREATE_TIME_` datetime DEFAULT NULL,
  `ROOT_PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `REMOVAL_TIME_` datetime DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_HI_DEC_OUT_INST` (`DEC_INST_ID_`),
  KEY `ACT_IDX_HI_DEC_OUT_RULE` (`RULE_ORDER_`,`CLAUSE_ID_`),
  KEY `ACT_IDX_HI_DEC_OUT_ROOT_PI` (`ROOT_PROC_INST_ID_`),
  KEY `ACT_IDX_HI_DEC_OUT_RM_TIME` (`REMOVAL_TIME_`)
) ;

-- ----------------------------
-- Table structure for ACT_HI_DETAIL
-- ----------------------------
DROP TABLE IF EXISTS `ACT_HI_DETAIL`;
CREATE TABLE `ACT_HI_DETAIL` (
  `ID_` varchar(64)  NOT NULL,
  `TYPE_` varchar(255)  NOT NULL,
  `PROC_DEF_KEY_` varchar(255)  DEFAULT NULL,
  `PROC_DEF_ID_` varchar(64)  DEFAULT NULL,
  `ROOT_PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `EXECUTION_ID_` varchar(64)  DEFAULT NULL,
  `CASE_DEF_KEY_` varchar(255)  DEFAULT NULL,
  `CASE_DEF_ID_` varchar(64)  DEFAULT NULL,
  `CASE_INST_ID_` varchar(64)  DEFAULT NULL,
  `CASE_EXECUTION_ID_` varchar(64)  DEFAULT NULL,
  `TASK_ID_` varchar(64)  DEFAULT NULL,
  `ACT_INST_ID_` varchar(64)  DEFAULT NULL,
  `VAR_INST_ID_` varchar(64)  DEFAULT NULL,
  `NAME_` varchar(255)  NOT NULL,
  `VAR_TYPE_` varchar(255)  DEFAULT NULL,
  `REV_` int DEFAULT NULL,
  `TIME_` datetime NOT NULL,
  `BYTEARRAY_ID_` varchar(64)  DEFAULT NULL,
  `DOUBLE_` double DEFAULT NULL,
  `LONG_` bigint DEFAULT NULL,
  `TEXT_` varchar(4000)  DEFAULT NULL,
  `TEXT2_` varchar(4000)  DEFAULT NULL,
  `SEQUENCE_COUNTER_` bigint DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  `OPERATION_ID_` varchar(64)  DEFAULT NULL,
  `REMOVAL_TIME_` datetime DEFAULT NULL,
  `INITIAL_` tinyint(1) DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_HI_DETAIL_ROOT_PI` (`ROOT_PROC_INST_ID_`),
  KEY `ACT_IDX_HI_DETAIL_PROC_INST` (`PROC_INST_ID_`),
  KEY `ACT_IDX_HI_DETAIL_ACT_INST` (`ACT_INST_ID_`),
  KEY `ACT_IDX_HI_DETAIL_CASE_INST` (`CASE_INST_ID_`),
  KEY `ACT_IDX_HI_DETAIL_CASE_EXEC` (`CASE_EXECUTION_ID_`),
  KEY `ACT_IDX_HI_DETAIL_TIME` (`TIME_`),
  KEY `ACT_IDX_HI_DETAIL_NAME` (`NAME_`),
  KEY `ACT_IDX_HI_DETAIL_TASK_ID` (`TASK_ID_`),
  KEY `ACT_IDX_HI_DETAIL_TENANT_ID` (`TENANT_ID_`),
  KEY `ACT_IDX_HI_DETAIL_PROC_DEF_KEY` (`PROC_DEF_KEY_`),
  KEY `ACT_IDX_HI_DETAIL_BYTEAR` (`BYTEARRAY_ID_`),
  KEY `ACT_IDX_HI_DETAIL_RM_TIME` (`REMOVAL_TIME_`),
  KEY `ACT_IDX_HI_DETAIL_TASK_BYTEAR` (`BYTEARRAY_ID_`,`TASK_ID_`),
  KEY `ACT_IDX_HI_DETAIL_VAR_INST_ID` (`VAR_INST_ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_HI_EXT_TASK_LOG
-- ----------------------------
DROP TABLE IF EXISTS `ACT_HI_EXT_TASK_LOG`;
CREATE TABLE `ACT_HI_EXT_TASK_LOG` (
  `ID_` varchar(64)  NOT NULL,
  `TIMESTAMP_` timestamp NOT NULL,
  `EXT_TASK_ID_` varchar(64)  NOT NULL,
  `RETRIES_` int DEFAULT NULL,
  `TOPIC_NAME_` varchar(255)  DEFAULT NULL,
  `WORKER_ID_` varchar(255)  DEFAULT NULL,
  `PRIORITY_` bigint NOT NULL DEFAULT '0',
  `ERROR_MSG_` varchar(4000)  DEFAULT NULL,
  `ERROR_DETAILS_ID_` varchar(64)  DEFAULT NULL,
  `ACT_ID_` varchar(255)  DEFAULT NULL,
  `ACT_INST_ID_` varchar(64)  DEFAULT NULL,
  `EXECUTION_ID_` varchar(64)  DEFAULT NULL,
  `ROOT_PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `PROC_DEF_ID_` varchar(64)  DEFAULT NULL,
  `PROC_DEF_KEY_` varchar(255)  DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  `STATE_` int DEFAULT NULL,
  `REV_` int DEFAULT NULL,
  `REMOVAL_TIME_` datetime DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_HI_EXT_TASK_LOG_ROOT_PI` (`ROOT_PROC_INST_ID_`),
  KEY `ACT_HI_EXT_TASK_LOG_PROCINST` (`PROC_INST_ID_`),
  KEY `ACT_HI_EXT_TASK_LOG_PROCDEF` (`PROC_DEF_ID_`),
  KEY `ACT_HI_EXT_TASK_LOG_PROC_DEF_KEY` (`PROC_DEF_KEY_`),
  KEY `ACT_HI_EXT_TASK_LOG_TENANT_ID` (`TENANT_ID_`),
  KEY `ACT_IDX_HI_EXTTASKLOG_ERRORDET` (`ERROR_DETAILS_ID_`),
  KEY `ACT_HI_EXT_TASK_LOG_RM_TIME` (`REMOVAL_TIME_`)
) ;

-- ----------------------------
-- Table structure for ACT_HI_IDENTITYLINK
-- ----------------------------
DROP TABLE IF EXISTS `ACT_HI_IDENTITYLINK`;
CREATE TABLE `ACT_HI_IDENTITYLINK` (
  `ID_` varchar(64)  NOT NULL,
  `TIMESTAMP_` timestamp NOT NULL,
  `TYPE_` varchar(255)  DEFAULT NULL,
  `USER_ID_` varchar(255)  DEFAULT NULL,
  `GROUP_ID_` varchar(255)  DEFAULT NULL,
  `TASK_ID_` varchar(64)  DEFAULT NULL,
  `ROOT_PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `PROC_DEF_ID_` varchar(64)  DEFAULT NULL,
  `OPERATION_TYPE_` varchar(64)  DEFAULT NULL,
  `ASSIGNER_ID_` varchar(64)  DEFAULT NULL,
  `PROC_DEF_KEY_` varchar(255)  DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  `REMOVAL_TIME_` datetime DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_HI_IDENT_LNK_ROOT_PI` (`ROOT_PROC_INST_ID_`),
  KEY `ACT_IDX_HI_IDENT_LNK_USER` (`USER_ID_`),
  KEY `ACT_IDX_HI_IDENT_LNK_GROUP` (`GROUP_ID_`),
  KEY `ACT_IDX_HI_IDENT_LNK_TENANT_ID` (`TENANT_ID_`),
  KEY `ACT_IDX_HI_IDENT_LNK_PROC_DEF_KEY` (`PROC_DEF_KEY_`),
  KEY `ACT_IDX_HI_IDENT_LINK_TASK` (`TASK_ID_`),
  KEY `ACT_IDX_HI_IDENT_LINK_RM_TIME` (`REMOVAL_TIME_`),
  KEY `ACT_IDX_HI_IDENT_LNK_TIMESTAMP` (`TIMESTAMP_`)
) ;

-- ----------------------------
-- Table structure for ACT_HI_INCIDENT
-- ----------------------------
DROP TABLE IF EXISTS `ACT_HI_INCIDENT`;
CREATE TABLE `ACT_HI_INCIDENT` (
  `ID_` varchar(64)  NOT NULL,
  `PROC_DEF_KEY_` varchar(255)  DEFAULT NULL,
  `PROC_DEF_ID_` varchar(64)  DEFAULT NULL,
  `ROOT_PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `EXECUTION_ID_` varchar(64)  DEFAULT NULL,
  `CREATE_TIME_` timestamp NOT NULL,
  `END_TIME_` timestamp NULL DEFAULT NULL,
  `INCIDENT_MSG_` varchar(4000)  DEFAULT NULL,
  `INCIDENT_TYPE_` varchar(255)  NOT NULL,
  `ACTIVITY_ID_` varchar(255)  DEFAULT NULL,
  `FAILED_ACTIVITY_ID_` varchar(255)  DEFAULT NULL,
  `CAUSE_INCIDENT_ID_` varchar(64)  DEFAULT NULL,
  `ROOT_CAUSE_INCIDENT_ID_` varchar(64)  DEFAULT NULL,
  `CONFIGURATION_` varchar(255)  DEFAULT NULL,
  `HISTORY_CONFIGURATION_` varchar(255)  DEFAULT NULL,
  `INCIDENT_STATE_` int DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  `JOB_DEF_ID_` varchar(64)  DEFAULT NULL,
  `ANNOTATION_` varchar(4000)  DEFAULT NULL,
  `REMOVAL_TIME_` datetime DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_HI_INCIDENT_TENANT_ID` (`TENANT_ID_`),
  KEY `ACT_IDX_HI_INCIDENT_PROC_DEF_KEY` (`PROC_DEF_KEY_`),
  KEY `ACT_IDX_HI_INCIDENT_ROOT_PI` (`ROOT_PROC_INST_ID_`),
  KEY `ACT_IDX_HI_INCIDENT_PROCINST` (`PROC_INST_ID_`),
  KEY `ACT_IDX_HI_INCIDENT_RM_TIME` (`REMOVAL_TIME_`),
  KEY `ACT_IDX_HI_INCIDENT_CREATE_TIME` (`CREATE_TIME_`),
  KEY `ACT_IDX_HI_INCIDENT_END_TIME` (`END_TIME_`)
) ;

-- ----------------------------
-- Table structure for ACT_HI_JOB_LOG
-- ----------------------------
DROP TABLE IF EXISTS `ACT_HI_JOB_LOG`;
CREATE TABLE `ACT_HI_JOB_LOG` (
  `ID_` varchar(64)  NOT NULL,
  `TIMESTAMP_` datetime NOT NULL,
  `JOB_ID_` varchar(64)  NOT NULL,
  `JOB_DUEDATE_` datetime DEFAULT NULL,
  `JOB_RETRIES_` int DEFAULT NULL,
  `JOB_PRIORITY_` bigint NOT NULL DEFAULT '0',
  `JOB_EXCEPTION_MSG_` varchar(4000)  DEFAULT NULL,
  `JOB_EXCEPTION_STACK_ID_` varchar(64)  DEFAULT NULL,
  `JOB_STATE_` int DEFAULT NULL,
  `JOB_DEF_ID_` varchar(64)  DEFAULT NULL,
  `JOB_DEF_TYPE_` varchar(255)  DEFAULT NULL,
  `JOB_DEF_CONFIGURATION_` varchar(255)  DEFAULT NULL,
  `ACT_ID_` varchar(255)  DEFAULT NULL,
  `FAILED_ACT_ID_` varchar(255)  DEFAULT NULL,
  `EXECUTION_ID_` varchar(64)  DEFAULT NULL,
  `ROOT_PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `PROCESS_INSTANCE_ID_` varchar(64)  DEFAULT NULL,
  `PROCESS_DEF_ID_` varchar(64)  DEFAULT NULL,
  `PROCESS_DEF_KEY_` varchar(255)  DEFAULT NULL,
  `DEPLOYMENT_ID_` varchar(64)  DEFAULT NULL,
  `SEQUENCE_COUNTER_` bigint DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  `HOSTNAME_` varchar(255)  DEFAULT NULL,
  `REMOVAL_TIME_` datetime DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_HI_JOB_LOG_ROOT_PI` (`ROOT_PROC_INST_ID_`),
  KEY `ACT_IDX_HI_JOB_LOG_PROCINST` (`PROCESS_INSTANCE_ID_`),
  KEY `ACT_IDX_HI_JOB_LOG_PROCDEF` (`PROCESS_DEF_ID_`),
  KEY `ACT_IDX_HI_JOB_LOG_TENANT_ID` (`TENANT_ID_`),
  KEY `ACT_IDX_HI_JOB_LOG_JOB_DEF_ID` (`JOB_DEF_ID_`),
  KEY `ACT_IDX_HI_JOB_LOG_PROC_DEF_KEY` (`PROCESS_DEF_KEY_`),
  KEY `ACT_IDX_HI_JOB_LOG_EX_STACK` (`JOB_EXCEPTION_STACK_ID_`),
  KEY `ACT_IDX_HI_JOB_LOG_RM_TIME` (`REMOVAL_TIME_`),
  KEY `ACT_IDX_HI_JOB_LOG_JOB_CONF` (`JOB_DEF_CONFIGURATION_`)
) ;

-- ----------------------------
-- Table structure for ACT_HI_OP_LOG
-- ----------------------------
DROP TABLE IF EXISTS `ACT_HI_OP_LOG`;
CREATE TABLE `ACT_HI_OP_LOG` (
  `ID_` varchar(64)  NOT NULL,
  `DEPLOYMENT_ID_` varchar(64)  DEFAULT NULL,
  `PROC_DEF_ID_` varchar(64)  DEFAULT NULL,
  `PROC_DEF_KEY_` varchar(255)  DEFAULT NULL,
  `ROOT_PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `EXECUTION_ID_` varchar(64)  DEFAULT NULL,
  `CASE_DEF_ID_` varchar(64)  DEFAULT NULL,
  `CASE_INST_ID_` varchar(64)  DEFAULT NULL,
  `CASE_EXECUTION_ID_` varchar(64)  DEFAULT NULL,
  `TASK_ID_` varchar(64)  DEFAULT NULL,
  `JOB_ID_` varchar(64)  DEFAULT NULL,
  `JOB_DEF_ID_` varchar(64)  DEFAULT NULL,
  `BATCH_ID_` varchar(64)  DEFAULT NULL,
  `USER_ID_` varchar(255)  DEFAULT NULL,
  `TIMESTAMP_` timestamp NOT NULL,
  `OPERATION_TYPE_` varchar(64)  DEFAULT NULL,
  `OPERATION_ID_` varchar(64)  DEFAULT NULL,
  `ENTITY_TYPE_` varchar(30)  DEFAULT NULL,
  `PROPERTY_` varchar(64)  DEFAULT NULL,
  `ORG_VALUE_` varchar(4000)  DEFAULT NULL,
  `NEW_VALUE_` varchar(4000)  DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  `REMOVAL_TIME_` datetime DEFAULT NULL,
  `CATEGORY_` varchar(64)  DEFAULT NULL,
  `EXTERNAL_TASK_ID_` varchar(64)  DEFAULT NULL,
  `ANNOTATION_` varchar(4000)  DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_HI_OP_LOG_ROOT_PI` (`ROOT_PROC_INST_ID_`),
  KEY `ACT_IDX_HI_OP_LOG_PROCINST` (`PROC_INST_ID_`),
  KEY `ACT_IDX_HI_OP_LOG_PROCDEF` (`PROC_DEF_ID_`),
  KEY `ACT_IDX_HI_OP_LOG_TASK` (`TASK_ID_`),
  KEY `ACT_IDX_HI_OP_LOG_RM_TIME` (`REMOVAL_TIME_`),
  KEY `ACT_IDX_HI_OP_LOG_TIMESTAMP` (`TIMESTAMP_`),
  KEY `ACT_IDX_HI_OP_LOG_USER_ID` (`USER_ID_`),
  KEY `ACT_IDX_HI_OP_LOG_OP_TYPE` (`OPERATION_TYPE_`),
  KEY `ACT_IDX_HI_OP_LOG_ENTITY_TYPE` (`ENTITY_TYPE_`)
) ;

-- ----------------------------
-- Table structure for ACT_HI_PROCINST
-- ----------------------------
DROP TABLE IF EXISTS `ACT_HI_PROCINST`;
CREATE TABLE `ACT_HI_PROCINST` (
  `ID_` varchar(64)  NOT NULL,
  `PROC_INST_ID_` varchar(64)  NOT NULL,
  `BUSINESS_KEY_` varchar(255)  DEFAULT NULL,
  `PROC_DEF_KEY_` varchar(255)  DEFAULT NULL,
  `PROC_DEF_ID_` varchar(64)  NOT NULL,
  `START_TIME_` datetime NOT NULL,
  `END_TIME_` datetime DEFAULT NULL,
  `REMOVAL_TIME_` datetime DEFAULT NULL,
  `DURATION_` bigint DEFAULT NULL,
  `START_USER_ID_` varchar(255)  DEFAULT NULL,
  `START_ACT_ID_` varchar(255)  DEFAULT NULL,
  `END_ACT_ID_` varchar(255)  DEFAULT NULL,
  `SUPER_PROCESS_INSTANCE_ID_` varchar(64)  DEFAULT NULL,
  `ROOT_PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `SUPER_CASE_INSTANCE_ID_` varchar(64)  DEFAULT NULL,
  `CASE_INST_ID_` varchar(64)  DEFAULT NULL,
  `DELETE_REASON_` varchar(4000)  DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  `STATE_` varchar(255)  DEFAULT NULL,
  `RESTARTED_PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  UNIQUE KEY `PROC_INST_ID_` (`PROC_INST_ID_`),
  KEY `ACT_IDX_HI_PRO_INST_END` (`END_TIME_`),
  KEY `ACT_IDX_HI_PRO_I_BUSKEY` (`BUSINESS_KEY_`),
  KEY `ACT_IDX_HI_PRO_INST_TENANT_ID` (`TENANT_ID_`),
  KEY `ACT_IDX_HI_PRO_INST_PROC_DEF_KEY` (`PROC_DEF_KEY_`),
  KEY `ACT_IDX_HI_PRO_INST_PROC_TIME` (`START_TIME_`,`END_TIME_`),
  KEY `ACT_IDX_HI_PI_PDEFID_END_TIME` (`PROC_DEF_ID_`,`END_TIME_`),
  KEY `ACT_IDX_HI_PRO_INST_ROOT_PI` (`ROOT_PROC_INST_ID_`),
  KEY `ACT_IDX_HI_PRO_INST_RM_TIME` (`REMOVAL_TIME_`),
  KEY `ACT_IDX_HI_PRO_RST_PRO_INST_ID` (`RESTARTED_PROC_INST_ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_HI_TASKINST
-- ----------------------------
DROP TABLE IF EXISTS `ACT_HI_TASKINST`;
CREATE TABLE `ACT_HI_TASKINST` (
  `ID_` varchar(64)  NOT NULL,
  `TASK_DEF_KEY_` varchar(255)  DEFAULT NULL,
  `PROC_DEF_KEY_` varchar(255)  DEFAULT NULL,
  `PROC_DEF_ID_` varchar(64)  DEFAULT NULL,
  `ROOT_PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `EXECUTION_ID_` varchar(64)  DEFAULT NULL,
  `CASE_DEF_KEY_` varchar(255)  DEFAULT NULL,
  `CASE_DEF_ID_` varchar(64)  DEFAULT NULL,
  `CASE_INST_ID_` varchar(64)  DEFAULT NULL,
  `CASE_EXECUTION_ID_` varchar(64)  DEFAULT NULL,
  `ACT_INST_ID_` varchar(64)  DEFAULT NULL,
  `NAME_` varchar(255)  DEFAULT NULL,
  `PARENT_TASK_ID_` varchar(64)  DEFAULT NULL,
  `DESCRIPTION_` varchar(4000)  DEFAULT NULL,
  `OWNER_` varchar(255)  DEFAULT NULL,
  `ASSIGNEE_` varchar(255)  DEFAULT NULL,
  `START_TIME_` datetime NOT NULL,
  `END_TIME_` datetime DEFAULT NULL,
  `DURATION_` bigint DEFAULT NULL,
  `DELETE_REASON_` varchar(4000)  DEFAULT NULL,
  `PRIORITY_` int DEFAULT NULL,
  `DUE_DATE_` datetime DEFAULT NULL,
  `FOLLOW_UP_DATE_` datetime DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  `REMOVAL_TIME_` datetime DEFAULT NULL,
  `TASK_STATE_` varchar(64)  DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_HI_TASKINST_ROOT_PI` (`ROOT_PROC_INST_ID_`),
  KEY `ACT_IDX_HI_TASK_INST_TENANT_ID` (`TENANT_ID_`),
  KEY `ACT_IDX_HI_TASK_INST_PROC_DEF_KEY` (`PROC_DEF_KEY_`),
  KEY `ACT_IDX_HI_TASKINST_PROCINST` (`PROC_INST_ID_`),
  KEY `ACT_IDX_HI_TASKINSTID_PROCINST` (`ID_`,`PROC_INST_ID_`),
  KEY `ACT_IDX_HI_TASK_INST_RM_TIME` (`REMOVAL_TIME_`),
  KEY `ACT_IDX_HI_TASK_INST_START` (`START_TIME_`),
  KEY `ACT_IDX_HI_TASK_INST_END` (`END_TIME_`)
) ;

-- ----------------------------
-- Table structure for ACT_HI_VARINST
-- ----------------------------
DROP TABLE IF EXISTS `ACT_HI_VARINST`;
CREATE TABLE `ACT_HI_VARINST` (
  `ID_` varchar(64)  NOT NULL,
  `PROC_DEF_KEY_` varchar(255)  DEFAULT NULL,
  `PROC_DEF_ID_` varchar(64)  DEFAULT NULL,
  `ROOT_PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `EXECUTION_ID_` varchar(64)  DEFAULT NULL,
  `ACT_INST_ID_` varchar(64)  DEFAULT NULL,
  `CASE_DEF_KEY_` varchar(255)  DEFAULT NULL,
  `CASE_DEF_ID_` varchar(64)  DEFAULT NULL,
  `CASE_INST_ID_` varchar(64)  DEFAULT NULL,
  `CASE_EXECUTION_ID_` varchar(64)  DEFAULT NULL,
  `TASK_ID_` varchar(64)  DEFAULT NULL,
  `NAME_` varchar(255)  NOT NULL,
  `VAR_TYPE_` varchar(100)  DEFAULT NULL,
  `CREATE_TIME_` datetime DEFAULT NULL,
  `REV_` int DEFAULT NULL,
  `BYTEARRAY_ID_` varchar(64)  DEFAULT NULL,
  `DOUBLE_` double DEFAULT NULL,
  `LONG_` bigint DEFAULT NULL,
  `TEXT_` varchar(4000)  DEFAULT NULL,
  `TEXT2_` varchar(4000)  DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  `STATE_` varchar(20)  DEFAULT NULL,
  `REMOVAL_TIME_` datetime DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_HI_VARINST_ROOT_PI` (`ROOT_PROC_INST_ID_`),
  KEY `ACT_IDX_HI_PROCVAR_PROC_INST` (`PROC_INST_ID_`),
  KEY `ACT_IDX_HI_PROCVAR_NAME_TYPE` (`NAME_`,`VAR_TYPE_`),
  KEY `ACT_IDX_HI_CASEVAR_CASE_INST` (`CASE_INST_ID_`),
  KEY `ACT_IDX_HI_VAR_INST_TENANT_ID` (`TENANT_ID_`),
  KEY `ACT_IDX_HI_VAR_INST_PROC_DEF_KEY` (`PROC_DEF_KEY_`),
  KEY `ACT_IDX_HI_VARINST_BYTEAR` (`BYTEARRAY_ID_`),
  KEY `ACT_IDX_HI_VARINST_RM_TIME` (`REMOVAL_TIME_`),
  KEY `ACT_IDX_HI_VAR_PI_NAME_TYPE` (`PROC_INST_ID_`,`NAME_`,`VAR_TYPE_`),
  KEY `ACT_IDX_HI_VARINST_NAME` (`NAME_`),
  KEY `ACT_IDX_HI_VARINST_ACT_INST_ID` (`ACT_INST_ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_ID_GROUP
-- ----------------------------
DROP TABLE IF EXISTS `ACT_ID_GROUP`;
CREATE TABLE `ACT_ID_GROUP` (
  `ID_` varchar(64)  NOT NULL,
  `REV_` int DEFAULT NULL,
  `NAME_` varchar(255)  DEFAULT NULL,
  `TYPE_` varchar(255)  DEFAULT NULL,
  PRIMARY KEY (`ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_ID_INFO
-- ----------------------------
DROP TABLE IF EXISTS `ACT_ID_INFO`;
CREATE TABLE `ACT_ID_INFO` (
  `ID_` varchar(64)  NOT NULL,
  `REV_` int DEFAULT NULL,
  `USER_ID_` varchar(64)  DEFAULT NULL,
  `TYPE_` varchar(64)  DEFAULT NULL,
  `KEY_` varchar(255)  DEFAULT NULL,
  `VALUE_` varchar(255)  DEFAULT NULL,
  `PASSWORD_` longblob,
  `PARENT_ID_` varchar(255)  DEFAULT NULL,
  PRIMARY KEY (`ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_ID_MEMBERSHIP
-- ----------------------------
DROP TABLE IF EXISTS `ACT_ID_MEMBERSHIP`;
CREATE TABLE `ACT_ID_MEMBERSHIP` (
  `USER_ID_` varchar(64)  NOT NULL,
  `GROUP_ID_` varchar(64)  NOT NULL,
  PRIMARY KEY (`USER_ID_`,`GROUP_ID_`),
  KEY `ACT_FK_MEMB_GROUP` (`GROUP_ID_`),
  CONSTRAINT `ACT_FK_MEMB_GROUP` FOREIGN KEY (`GROUP_ID_`) REFERENCES `ACT_ID_GROUP` (`ID_`),
  CONSTRAINT `ACT_FK_MEMB_USER` FOREIGN KEY (`USER_ID_`) REFERENCES `ACT_ID_USER` (`ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_ID_TENANT
-- ----------------------------
DROP TABLE IF EXISTS `ACT_ID_TENANT`;
CREATE TABLE `ACT_ID_TENANT` (
  `ID_` varchar(64)  NOT NULL,
  `REV_` int DEFAULT NULL,
  `NAME_` varchar(255)  DEFAULT NULL,
  PRIMARY KEY (`ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_ID_TENANT_MEMBER
-- ----------------------------
DROP TABLE IF EXISTS `ACT_ID_TENANT_MEMBER`;
CREATE TABLE `ACT_ID_TENANT_MEMBER` (
  `ID_` varchar(64)  NOT NULL,
  `TENANT_ID_` varchar(64)  NOT NULL,
  `USER_ID_` varchar(64)  DEFAULT NULL,
  `GROUP_ID_` varchar(64)  DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  UNIQUE KEY `ACT_UNIQ_TENANT_MEMB_USER` (`TENANT_ID_`,`USER_ID_`),
  UNIQUE KEY `ACT_UNIQ_TENANT_MEMB_GROUP` (`TENANT_ID_`,`GROUP_ID_`),
  KEY `ACT_FK_TENANT_MEMB_USER` (`USER_ID_`),
  KEY `ACT_FK_TENANT_MEMB_GROUP` (`GROUP_ID_`),
  CONSTRAINT `ACT_FK_TENANT_MEMB` FOREIGN KEY (`TENANT_ID_`) REFERENCES `ACT_ID_TENANT` (`ID_`),
  CONSTRAINT `ACT_FK_TENANT_MEMB_GROUP` FOREIGN KEY (`GROUP_ID_`) REFERENCES `ACT_ID_GROUP` (`ID_`),
  CONSTRAINT `ACT_FK_TENANT_MEMB_USER` FOREIGN KEY (`USER_ID_`) REFERENCES `ACT_ID_USER` (`ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_ID_USER
-- ----------------------------
DROP TABLE IF EXISTS `ACT_ID_USER`;
CREATE TABLE `ACT_ID_USER` (
  `ID_` varchar(64)  NOT NULL,
  `REV_` int DEFAULT NULL,
  `FIRST_` varchar(255)  DEFAULT NULL,
  `LAST_` varchar(255)  DEFAULT NULL,
  `EMAIL_` varchar(255)  DEFAULT NULL,
  `PWD_` varchar(255)  DEFAULT NULL,
  `SALT_` varchar(255)  DEFAULT NULL,
  `LOCK_EXP_TIME_` datetime DEFAULT NULL,
  `ATTEMPTS_` int DEFAULT NULL,
  `PICTURE_ID_` varchar(64)  DEFAULT NULL,
  PRIMARY KEY (`ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_RE_CAMFORMDEF
-- ----------------------------
DROP TABLE IF EXISTS `ACT_RE_CAMFORMDEF`;
CREATE TABLE `ACT_RE_CAMFORMDEF` (
  `ID_` varchar(64)  NOT NULL,
  `REV_` int DEFAULT NULL,
  `KEY_` varchar(255)  NOT NULL,
  `VERSION_` int NOT NULL,
  `DEPLOYMENT_ID_` varchar(64)  DEFAULT NULL,
  `RESOURCE_NAME_` varchar(4000)  DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  PRIMARY KEY (`ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_RE_CASE_DEF
-- ----------------------------
DROP TABLE IF EXISTS `ACT_RE_CASE_DEF`;
CREATE TABLE `ACT_RE_CASE_DEF` (
  `ID_` varchar(64)  NOT NULL,
  `REV_` int DEFAULT NULL,
  `CATEGORY_` varchar(255)  DEFAULT NULL,
  `NAME_` varchar(255)  DEFAULT NULL,
  `KEY_` varchar(255)  NOT NULL,
  `VERSION_` int NOT NULL,
  `DEPLOYMENT_ID_` varchar(64)  DEFAULT NULL,
  `RESOURCE_NAME_` varchar(4000)  DEFAULT NULL,
  `DGRM_RESOURCE_NAME_` varchar(4000)  DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  `HISTORY_TTL_` int DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_CASE_DEF_TENANT_ID` (`TENANT_ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_RE_DECISION_DEF
-- ----------------------------
DROP TABLE IF EXISTS `ACT_RE_DECISION_DEF`;
CREATE TABLE `ACT_RE_DECISION_DEF` (
  `ID_` varchar(64)  NOT NULL,
  `REV_` int DEFAULT NULL,
  `CATEGORY_` varchar(255)  DEFAULT NULL,
  `NAME_` varchar(255)  DEFAULT NULL,
  `KEY_` varchar(255)  NOT NULL,
  `VERSION_` int NOT NULL,
  `DEPLOYMENT_ID_` varchar(64)  DEFAULT NULL,
  `RESOURCE_NAME_` varchar(4000)  DEFAULT NULL,
  `DGRM_RESOURCE_NAME_` varchar(4000)  DEFAULT NULL,
  `DEC_REQ_ID_` varchar(64)  DEFAULT NULL,
  `DEC_REQ_KEY_` varchar(255)  DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  `HISTORY_TTL_` int DEFAULT NULL,
  `VERSION_TAG_` varchar(64)  DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_DEC_DEF_TENANT_ID` (`TENANT_ID_`),
  KEY `ACT_IDX_DEC_DEF_REQ_ID` (`DEC_REQ_ID_`),
  CONSTRAINT `ACT_FK_DEC_REQ` FOREIGN KEY (`DEC_REQ_ID_`) REFERENCES `ACT_RE_DECISION_REQ_DEF` (`ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_RE_DECISION_REQ_DEF
-- ----------------------------
DROP TABLE IF EXISTS `ACT_RE_DECISION_REQ_DEF`;
CREATE TABLE `ACT_RE_DECISION_REQ_DEF` (
  `ID_` varchar(64)  NOT NULL,
  `REV_` int DEFAULT NULL,
  `CATEGORY_` varchar(255)  DEFAULT NULL,
  `NAME_` varchar(255)  DEFAULT NULL,
  `KEY_` varchar(255)  NOT NULL,
  `VERSION_` int NOT NULL,
  `DEPLOYMENT_ID_` varchar(64)  DEFAULT NULL,
  `RESOURCE_NAME_` varchar(4000)  DEFAULT NULL,
  `DGRM_RESOURCE_NAME_` varchar(4000)  DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_DEC_REQ_DEF_TENANT_ID` (`TENANT_ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_RE_DEPLOYMENT
-- ----------------------------
DROP TABLE IF EXISTS `ACT_RE_DEPLOYMENT`;
CREATE TABLE `ACT_RE_DEPLOYMENT` (
  `ID_` varchar(64)  NOT NULL,
  `NAME_` varchar(255)  DEFAULT NULL,
  `DEPLOY_TIME_` datetime DEFAULT NULL,
  `SOURCE_` varchar(255)  DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_DEPLOYMENT_NAME` (`NAME_`),
  KEY `ACT_IDX_DEPLOYMENT_TENANT_ID` (`TENANT_ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_RE_PROCDEF
-- ----------------------------
DROP TABLE IF EXISTS `ACT_RE_PROCDEF`;
CREATE TABLE `ACT_RE_PROCDEF` (
  `ID_` varchar(64)  NOT NULL,
  `REV_` int DEFAULT NULL,
  `CATEGORY_` varchar(255)  DEFAULT NULL,
  `NAME_` varchar(255)  DEFAULT NULL,
  `KEY_` varchar(255)  NOT NULL,
  `VERSION_` int NOT NULL,
  `DEPLOYMENT_ID_` varchar(64)  DEFAULT NULL,
  `RESOURCE_NAME_` varchar(4000)  DEFAULT NULL,
  `DGRM_RESOURCE_NAME_` varchar(4000)  DEFAULT NULL,
  `HAS_START_FORM_KEY_` tinyint DEFAULT NULL,
  `SUSPENSION_STATE_` int DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  `VERSION_TAG_` varchar(64)  DEFAULT NULL,
  `HISTORY_TTL_` int DEFAULT NULL,
  `STARTABLE_` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_PROCDEF_DEPLOYMENT_ID` (`DEPLOYMENT_ID_`),
  KEY `ACT_IDX_PROCDEF_TENANT_ID` (`TENANT_ID_`),
  KEY `ACT_IDX_PROCDEF_VER_TAG` (`VERSION_TAG_`)
) ;

-- ----------------------------
-- Table structure for ACT_RU_AUTHORIZATION
-- ----------------------------
DROP TABLE IF EXISTS `ACT_RU_AUTHORIZATION`;
CREATE TABLE `ACT_RU_AUTHORIZATION` (
  `ID_` varchar(64)  NOT NULL,
  `REV_` int NOT NULL,
  `TYPE_` int NOT NULL,
  `GROUP_ID_` varchar(255)  DEFAULT NULL,
  `USER_ID_` varchar(255)  DEFAULT NULL,
  `RESOURCE_TYPE_` int NOT NULL,
  `RESOURCE_ID_` varchar(255)  DEFAULT NULL,
  `PERMS_` int DEFAULT NULL,
  `REMOVAL_TIME_` datetime DEFAULT NULL,
  `ROOT_PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  UNIQUE KEY `ACT_UNIQ_AUTH_USER` (`USER_ID_`,`TYPE_`,`RESOURCE_TYPE_`,`RESOURCE_ID_`),
  UNIQUE KEY `ACT_UNIQ_AUTH_GROUP` (`GROUP_ID_`,`TYPE_`,`RESOURCE_TYPE_`,`RESOURCE_ID_`),
  KEY `ACT_IDX_AUTH_GROUP_ID` (`GROUP_ID_`),
  KEY `ACT_IDX_AUTH_RESOURCE_ID` (`RESOURCE_ID_`),
  KEY `ACT_IDX_AUTH_ROOT_PI` (`ROOT_PROC_INST_ID_`),
  KEY `ACT_IDX_AUTH_RM_TIME` (`REMOVAL_TIME_`)
) ;

-- ----------------------------
-- Table structure for ACT_RU_BATCH
-- ----------------------------
DROP TABLE IF EXISTS `ACT_RU_BATCH`;
CREATE TABLE `ACT_RU_BATCH` (
  `ID_` varchar(64)  NOT NULL,
  `REV_` int NOT NULL,
  `TYPE_` varchar(255)  DEFAULT NULL,
  `TOTAL_JOBS_` int DEFAULT NULL,
  `JOBS_CREATED_` int DEFAULT NULL,
  `JOBS_PER_SEED_` int DEFAULT NULL,
  `INVOCATIONS_PER_JOB_` int DEFAULT NULL,
  `SEED_JOB_DEF_ID_` varchar(64)  DEFAULT NULL,
  `BATCH_JOB_DEF_ID_` varchar(64)  DEFAULT NULL,
  `MONITOR_JOB_DEF_ID_` varchar(64)  DEFAULT NULL,
  `SUSPENSION_STATE_` int DEFAULT NULL,
  `CONFIGURATION_` varchar(255)  DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  `CREATE_USER_ID_` varchar(255)  DEFAULT NULL,
  `START_TIME_` datetime DEFAULT NULL,
  `EXEC_START_TIME_` datetime DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_BATCH_SEED_JOB_DEF` (`SEED_JOB_DEF_ID_`),
  KEY `ACT_IDX_BATCH_MONITOR_JOB_DEF` (`MONITOR_JOB_DEF_ID_`),
  KEY `ACT_IDX_BATCH_JOB_DEF` (`BATCH_JOB_DEF_ID_`),
  CONSTRAINT `ACT_FK_BATCH_JOB_DEF` FOREIGN KEY (`BATCH_JOB_DEF_ID_`) REFERENCES `ACT_RU_JOBDEF` (`ID_`),
  CONSTRAINT `ACT_FK_BATCH_MONITOR_JOB_DEF` FOREIGN KEY (`MONITOR_JOB_DEF_ID_`) REFERENCES `ACT_RU_JOBDEF` (`ID_`),
  CONSTRAINT `ACT_FK_BATCH_SEED_JOB_DEF` FOREIGN KEY (`SEED_JOB_DEF_ID_`) REFERENCES `ACT_RU_JOBDEF` (`ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_RU_CASE_EXECUTION
-- ----------------------------
DROP TABLE IF EXISTS `ACT_RU_CASE_EXECUTION`;
CREATE TABLE `ACT_RU_CASE_EXECUTION` (
  `ID_` varchar(64)  NOT NULL,
  `REV_` int DEFAULT NULL,
  `CASE_INST_ID_` varchar(64)  DEFAULT NULL,
  `SUPER_CASE_EXEC_` varchar(64)  DEFAULT NULL,
  `SUPER_EXEC_` varchar(64)  DEFAULT NULL,
  `BUSINESS_KEY_` varchar(255)  DEFAULT NULL,
  `PARENT_ID_` varchar(64)  DEFAULT NULL,
  `CASE_DEF_ID_` varchar(64)  DEFAULT NULL,
  `ACT_ID_` varchar(255)  DEFAULT NULL,
  `PREV_STATE_` int DEFAULT NULL,
  `CURRENT_STATE_` int DEFAULT NULL,
  `REQUIRED_` tinyint(1) DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_CASE_EXEC_BUSKEY` (`BUSINESS_KEY_`),
  KEY `ACT_IDX_CASE_EXE_CASE_INST` (`CASE_INST_ID_`),
  KEY `ACT_FK_CASE_EXE_PARENT` (`PARENT_ID_`),
  KEY `ACT_FK_CASE_EXE_CASE_DEF` (`CASE_DEF_ID_`),
  KEY `ACT_IDX_CASE_EXEC_TENANT_ID` (`TENANT_ID_`),
  CONSTRAINT `ACT_FK_CASE_EXE_CASE_DEF` FOREIGN KEY (`CASE_DEF_ID_`) REFERENCES `ACT_RE_CASE_DEF` (`ID_`),
  CONSTRAINT `ACT_FK_CASE_EXE_CASE_INST` FOREIGN KEY (`CASE_INST_ID_`) REFERENCES `ACT_RU_CASE_EXECUTION` (`ID_`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `ACT_FK_CASE_EXE_PARENT` FOREIGN KEY (`PARENT_ID_`) REFERENCES `ACT_RU_CASE_EXECUTION` (`ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_RU_CASE_SENTRY_PART
-- ----------------------------
DROP TABLE IF EXISTS `ACT_RU_CASE_SENTRY_PART`;
CREATE TABLE `ACT_RU_CASE_SENTRY_PART` (
  `ID_` varchar(64)  NOT NULL,
  `REV_` int DEFAULT NULL,
  `CASE_INST_ID_` varchar(64)  DEFAULT NULL,
  `CASE_EXEC_ID_` varchar(64)  DEFAULT NULL,
  `SENTRY_ID_` varchar(255)  DEFAULT NULL,
  `TYPE_` varchar(255)  DEFAULT NULL,
  `SOURCE_CASE_EXEC_ID_` varchar(64)  DEFAULT NULL,
  `STANDARD_EVENT_` varchar(255)  DEFAULT NULL,
  `SOURCE_` varchar(255)  DEFAULT NULL,
  `VARIABLE_EVENT_` varchar(255)  DEFAULT NULL,
  `VARIABLE_NAME_` varchar(255)  DEFAULT NULL,
  `SATISFIED_` tinyint(1) DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_FK_CASE_SENTRY_CASE_INST` (`CASE_INST_ID_`),
  KEY `ACT_FK_CASE_SENTRY_CASE_EXEC` (`CASE_EXEC_ID_`),
  CONSTRAINT `ACT_FK_CASE_SENTRY_CASE_EXEC` FOREIGN KEY (`CASE_EXEC_ID_`) REFERENCES `ACT_RU_CASE_EXECUTION` (`ID_`),
  CONSTRAINT `ACT_FK_CASE_SENTRY_CASE_INST` FOREIGN KEY (`CASE_INST_ID_`) REFERENCES `ACT_RU_CASE_EXECUTION` (`ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_RU_EVENT_SUBSCR
-- ----------------------------
DROP TABLE IF EXISTS `ACT_RU_EVENT_SUBSCR`;
CREATE TABLE `ACT_RU_EVENT_SUBSCR` (
  `ID_` varchar(64)  NOT NULL,
  `REV_` int DEFAULT NULL,
  `EVENT_TYPE_` varchar(255)  NOT NULL,
  `EVENT_NAME_` varchar(255)  DEFAULT NULL,
  `EXECUTION_ID_` varchar(64)  DEFAULT NULL,
  `PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `ACTIVITY_ID_` varchar(255)  DEFAULT NULL,
  `CONFIGURATION_` varchar(255)  DEFAULT NULL,
  `CREATED_` datetime NOT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_EVENT_SUBSCR_CONFIG_` (`CONFIGURATION_`),
  KEY `ACT_IDX_EVENT_SUBSCR_TENANT_ID` (`TENANT_ID_`),
  KEY `ACT_FK_EVENT_EXEC` (`EXECUTION_ID_`),
  KEY `ACT_IDX_EVENT_SUBSCR_EVT_NAME` (`EVENT_NAME_`),
  CONSTRAINT `ACT_FK_EVENT_EXEC` FOREIGN KEY (`EXECUTION_ID_`) REFERENCES `ACT_RU_EXECUTION` (`ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_RU_EXECUTION
-- ----------------------------
DROP TABLE IF EXISTS `ACT_RU_EXECUTION`;
CREATE TABLE `ACT_RU_EXECUTION` (
  `ID_` varchar(64)  NOT NULL,
  `REV_` int DEFAULT NULL,
  `ROOT_PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `BUSINESS_KEY_` varchar(255)  DEFAULT NULL,
  `PARENT_ID_` varchar(64)  DEFAULT NULL,
  `PROC_DEF_ID_` varchar(64)  DEFAULT NULL,
  `SUPER_EXEC_` varchar(64)  DEFAULT NULL,
  `SUPER_CASE_EXEC_` varchar(64)  DEFAULT NULL,
  `CASE_INST_ID_` varchar(64)  DEFAULT NULL,
  `ACT_ID_` varchar(255)  DEFAULT NULL,
  `ACT_INST_ID_` varchar(64)  DEFAULT NULL,
  `IS_ACTIVE_` tinyint DEFAULT NULL,
  `IS_CONCURRENT_` tinyint DEFAULT NULL,
  `IS_SCOPE_` tinyint DEFAULT NULL,
  `IS_EVENT_SCOPE_` tinyint DEFAULT NULL,
  `SUSPENSION_STATE_` int DEFAULT NULL,
  `CACHED_ENT_STATE_` int DEFAULT NULL,
  `SEQUENCE_COUNTER_` bigint DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_EXEC_ROOT_PI` (`ROOT_PROC_INST_ID_`),
  KEY `ACT_IDX_EXEC_BUSKEY` (`BUSINESS_KEY_`),
  KEY `ACT_IDX_EXEC_TENANT_ID` (`TENANT_ID_`),
  KEY `ACT_FK_EXE_PROCINST` (`PROC_INST_ID_`),
  KEY `ACT_FK_EXE_PARENT` (`PARENT_ID_`),
  KEY `ACT_FK_EXE_SUPER` (`SUPER_EXEC_`),
  KEY `ACT_FK_EXE_PROCDEF` (`PROC_DEF_ID_`),
  CONSTRAINT `ACT_FK_EXE_PARENT` FOREIGN KEY (`PARENT_ID_`) REFERENCES `ACT_RU_EXECUTION` (`ID_`),
  CONSTRAINT `ACT_FK_EXE_PROCDEF` FOREIGN KEY (`PROC_DEF_ID_`) REFERENCES `ACT_RE_PROCDEF` (`ID_`),
  CONSTRAINT `ACT_FK_EXE_PROCINST` FOREIGN KEY (`PROC_INST_ID_`) REFERENCES `ACT_RU_EXECUTION` (`ID_`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `ACT_FK_EXE_SUPER` FOREIGN KEY (`SUPER_EXEC_`) REFERENCES `ACT_RU_EXECUTION` (`ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_RU_EXT_TASK
-- ----------------------------
DROP TABLE IF EXISTS `ACT_RU_EXT_TASK`;
CREATE TABLE `ACT_RU_EXT_TASK` (
  `ID_` varchar(64)  NOT NULL,
  `REV_` int NOT NULL,
  `WORKER_ID_` varchar(255)  DEFAULT NULL,
  `TOPIC_NAME_` varchar(255)  DEFAULT NULL,
  `RETRIES_` int DEFAULT NULL,
  `ERROR_MSG_` varchar(4000)  DEFAULT NULL,
  `ERROR_DETAILS_ID_` varchar(64)  DEFAULT NULL,
  `LOCK_EXP_TIME_` datetime DEFAULT NULL,
  `CREATE_TIME_` datetime DEFAULT NULL,
  `SUSPENSION_STATE_` int DEFAULT NULL,
  `EXECUTION_ID_` varchar(64)  DEFAULT NULL,
  `PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `PROC_DEF_ID_` varchar(64)  DEFAULT NULL,
  `PROC_DEF_KEY_` varchar(255)  DEFAULT NULL,
  `ACT_ID_` varchar(255)  DEFAULT NULL,
  `ACT_INST_ID_` varchar(64)  DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  `PRIORITY_` bigint NOT NULL DEFAULT '0',
  `LAST_FAILURE_LOG_ID_` varchar(64)  DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_EXT_TASK_TOPIC` (`TOPIC_NAME_`),
  KEY `ACT_IDX_EXT_TASK_TENANT_ID` (`TENANT_ID_`),
  KEY `ACT_IDX_EXT_TASK_PRIORITY` (`PRIORITY_`),
  KEY `ACT_IDX_EXT_TASK_ERR_DETAILS` (`ERROR_DETAILS_ID_`),
  KEY `ACT_IDX_EXT_TASK_EXEC` (`EXECUTION_ID_`),
  CONSTRAINT `ACT_FK_EXT_TASK_ERROR_DETAILS` FOREIGN KEY (`ERROR_DETAILS_ID_`) REFERENCES `ACT_GE_BYTEARRAY` (`ID_`),
  CONSTRAINT `ACT_FK_EXT_TASK_EXE` FOREIGN KEY (`EXECUTION_ID_`) REFERENCES `ACT_RU_EXECUTION` (`ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_RU_FILTER
-- ----------------------------
DROP TABLE IF EXISTS `ACT_RU_FILTER`;
CREATE TABLE `ACT_RU_FILTER` (
  `ID_` varchar(64)  NOT NULL,
  `REV_` int NOT NULL,
  `RESOURCE_TYPE_` varchar(255)  NOT NULL,
  `NAME_` varchar(255)  NOT NULL,
  `OWNER_` varchar(255)  DEFAULT NULL,
  `QUERY_` longtext  NOT NULL,
  `PROPERTIES_` longtext ,
  PRIMARY KEY (`ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_RU_IDENTITYLINK
-- ----------------------------
DROP TABLE IF EXISTS `ACT_RU_IDENTITYLINK`;
CREATE TABLE `ACT_RU_IDENTITYLINK` (
  `ID_` varchar(64)  NOT NULL,
  `REV_` int DEFAULT NULL,
  `GROUP_ID_` varchar(255)  DEFAULT NULL,
  `TYPE_` varchar(255)  DEFAULT NULL,
  `USER_ID_` varchar(255)  DEFAULT NULL,
  `TASK_ID_` varchar(64)  DEFAULT NULL,
  `PROC_DEF_ID_` varchar(64)  DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_IDENT_LNK_USER` (`USER_ID_`),
  KEY `ACT_IDX_IDENT_LNK_GROUP` (`GROUP_ID_`),
  KEY `ACT_IDX_ATHRZ_PROCEDEF` (`PROC_DEF_ID_`),
  KEY `ACT_FK_TSKASS_TASK` (`TASK_ID_`),
  CONSTRAINT `ACT_FK_ATHRZ_PROCEDEF` FOREIGN KEY (`PROC_DEF_ID_`) REFERENCES `ACT_RE_PROCDEF` (`ID_`),
  CONSTRAINT `ACT_FK_TSKASS_TASK` FOREIGN KEY (`TASK_ID_`) REFERENCES `ACT_RU_TASK` (`ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_RU_INCIDENT
-- ----------------------------
DROP TABLE IF EXISTS `ACT_RU_INCIDENT`;
CREATE TABLE `ACT_RU_INCIDENT` (
  `ID_` varchar(64)  NOT NULL,
  `REV_` int NOT NULL,
  `INCIDENT_TIMESTAMP_` datetime NOT NULL,
  `INCIDENT_MSG_` varchar(4000)  DEFAULT NULL,
  `INCIDENT_TYPE_` varchar(255)  NOT NULL,
  `EXECUTION_ID_` varchar(64)  DEFAULT NULL,
  `ACTIVITY_ID_` varchar(255)  DEFAULT NULL,
  `FAILED_ACTIVITY_ID_` varchar(255)  DEFAULT NULL,
  `PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `PROC_DEF_ID_` varchar(64)  DEFAULT NULL,
  `CAUSE_INCIDENT_ID_` varchar(64)  DEFAULT NULL,
  `ROOT_CAUSE_INCIDENT_ID_` varchar(64)  DEFAULT NULL,
  `CONFIGURATION_` varchar(255)  DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  `JOB_DEF_ID_` varchar(64)  DEFAULT NULL,
  `ANNOTATION_` varchar(4000)  DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_INC_CONFIGURATION` (`CONFIGURATION_`),
  KEY `ACT_IDX_INC_TENANT_ID` (`TENANT_ID_`),
  KEY `ACT_IDX_INC_JOB_DEF` (`JOB_DEF_ID_`),
  KEY `ACT_IDX_INC_CAUSEINCID` (`CAUSE_INCIDENT_ID_`),
  KEY `ACT_IDX_INC_EXID` (`EXECUTION_ID_`),
  KEY `ACT_IDX_INC_PROCDEFID` (`PROC_DEF_ID_`),
  KEY `ACT_IDX_INC_PROCINSTID` (`PROC_INST_ID_`),
  KEY `ACT_IDX_INC_ROOTCAUSEINCID` (`ROOT_CAUSE_INCIDENT_ID_`),
  CONSTRAINT `ACT_FK_INC_CAUSE` FOREIGN KEY (`CAUSE_INCIDENT_ID_`) REFERENCES `ACT_RU_INCIDENT` (`ID_`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `ACT_FK_INC_EXE` FOREIGN KEY (`EXECUTION_ID_`) REFERENCES `ACT_RU_EXECUTION` (`ID_`),
  CONSTRAINT `ACT_FK_INC_JOB_DEF` FOREIGN KEY (`JOB_DEF_ID_`) REFERENCES `ACT_RU_JOBDEF` (`ID_`),
  CONSTRAINT `ACT_FK_INC_PROCDEF` FOREIGN KEY (`PROC_DEF_ID_`) REFERENCES `ACT_RE_PROCDEF` (`ID_`),
  CONSTRAINT `ACT_FK_INC_PROCINST` FOREIGN KEY (`PROC_INST_ID_`) REFERENCES `ACT_RU_EXECUTION` (`ID_`),
  CONSTRAINT `ACT_FK_INC_RCAUSE` FOREIGN KEY (`ROOT_CAUSE_INCIDENT_ID_`) REFERENCES `ACT_RU_INCIDENT` (`ID_`) ON DELETE CASCADE ON UPDATE CASCADE
) ;

-- ----------------------------
-- Table structure for ACT_RU_JOB
-- ----------------------------
DROP TABLE IF EXISTS `ACT_RU_JOB`;
CREATE TABLE `ACT_RU_JOB` (
  `ID_` varchar(64)  NOT NULL,
  `REV_` int DEFAULT NULL,
  `TYPE_` varchar(255)  NOT NULL,
  `LOCK_EXP_TIME_` datetime DEFAULT NULL,
  `LOCK_OWNER_` varchar(255)  DEFAULT NULL,
  `EXCLUSIVE_` tinyint(1) DEFAULT NULL,
  `EXECUTION_ID_` varchar(64)  DEFAULT NULL,
  `ROOT_PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `PROCESS_INSTANCE_ID_` varchar(64)  DEFAULT NULL,
  `PROCESS_DEF_ID_` varchar(64)  DEFAULT NULL,
  `PROCESS_DEF_KEY_` varchar(255)  DEFAULT NULL,
  `RETRIES_` int DEFAULT NULL,
  `EXCEPTION_STACK_ID_` varchar(64)  DEFAULT NULL,
  `EXCEPTION_MSG_` varchar(4000)  DEFAULT NULL,
  `FAILED_ACT_ID_` varchar(255)  DEFAULT NULL,
  `DUEDATE_` datetime DEFAULT NULL,
  `REPEAT_` varchar(255)  DEFAULT NULL,
  `REPEAT_OFFSET_` bigint DEFAULT '0',
  `HANDLER_TYPE_` varchar(255)  DEFAULT NULL,
  `HANDLER_CFG_` varchar(4000)  DEFAULT NULL,
  `DEPLOYMENT_ID_` varchar(64)  DEFAULT NULL,
  `SUSPENSION_STATE_` int NOT NULL DEFAULT '1',
  `JOB_DEF_ID_` varchar(64)  DEFAULT NULL,
  `PRIORITY_` bigint NOT NULL DEFAULT '0',
  `SEQUENCE_COUNTER_` bigint DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  `CREATE_TIME_` datetime DEFAULT NULL,
  `LAST_FAILURE_LOG_ID_` varchar(64)  DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_JOB_EXECUTION_ID` (`EXECUTION_ID_`),
  KEY `ACT_IDX_JOB_HANDLER` (`HANDLER_TYPE_`(100),`HANDLER_CFG_`(155)),
  KEY `ACT_IDX_JOB_PROCINST` (`PROCESS_INSTANCE_ID_`),
  KEY `ACT_IDX_JOB_ROOT_PROCINST` (`ROOT_PROC_INST_ID_`),
  KEY `ACT_IDX_JOB_TENANT_ID` (`TENANT_ID_`),
  KEY `ACT_IDX_JOB_JOB_DEF_ID` (`JOB_DEF_ID_`),
  KEY `ACT_FK_JOB_EXCEPTION` (`EXCEPTION_STACK_ID_`),
  KEY `ACT_IDX_JOB_HANDLER_TYPE` (`HANDLER_TYPE_`),
  CONSTRAINT `ACT_FK_JOB_EXCEPTION` FOREIGN KEY (`EXCEPTION_STACK_ID_`) REFERENCES `ACT_GE_BYTEARRAY` (`ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_RU_JOBDEF
-- ----------------------------
DROP TABLE IF EXISTS `ACT_RU_JOBDEF`;
CREATE TABLE `ACT_RU_JOBDEF` (
  `ID_` varchar(64)  NOT NULL,
  `REV_` int DEFAULT NULL,
  `PROC_DEF_ID_` varchar(64)  DEFAULT NULL,
  `PROC_DEF_KEY_` varchar(255)  DEFAULT NULL,
  `ACT_ID_` varchar(255)  DEFAULT NULL,
  `JOB_TYPE_` varchar(255)  NOT NULL,
  `JOB_CONFIGURATION_` varchar(255)  DEFAULT NULL,
  `SUSPENSION_STATE_` int DEFAULT NULL,
  `JOB_PRIORITY_` bigint DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  `DEPLOYMENT_ID_` varchar(64)  DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_JOBDEF_TENANT_ID` (`TENANT_ID_`),
  KEY `ACT_IDX_JOBDEF_PROC_DEF_ID` (`PROC_DEF_ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_RU_METER_LOG
-- ----------------------------
DROP TABLE IF EXISTS `ACT_RU_METER_LOG`;
CREATE TABLE `ACT_RU_METER_LOG` (
  `ID_` varchar(64)  NOT NULL,
  `NAME_` varchar(64)  NOT NULL,
  `REPORTER_` varchar(255)  DEFAULT NULL,
  `VALUE_` bigint DEFAULT NULL,
  `TIMESTAMP_` datetime DEFAULT NULL,
  `MILLISECONDS_` bigint DEFAULT '0',
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_METER_LOG_MS` (`MILLISECONDS_`),
  KEY `ACT_IDX_METER_LOG_NAME_MS` (`NAME_`,`MILLISECONDS_`),
  KEY `ACT_IDX_METER_LOG_REPORT` (`NAME_`,`REPORTER_`,`MILLISECONDS_`),
  KEY `ACT_IDX_METER_LOG_TIME` (`TIMESTAMP_`),
  KEY `ACT_IDX_METER_LOG` (`NAME_`,`TIMESTAMP_`)
) ;

-- ----------------------------
-- Table structure for ACT_RU_TASK
-- ----------------------------
DROP TABLE IF EXISTS `ACT_RU_TASK`;
CREATE TABLE `ACT_RU_TASK` (
  `ID_` varchar(64)  NOT NULL,
  `REV_` int DEFAULT NULL,
  `EXECUTION_ID_` varchar(64)  DEFAULT NULL,
  `PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `PROC_DEF_ID_` varchar(64)  DEFAULT NULL,
  `CASE_EXECUTION_ID_` varchar(64)  DEFAULT NULL,
  `CASE_INST_ID_` varchar(64)  DEFAULT NULL,
  `CASE_DEF_ID_` varchar(64)  DEFAULT NULL,
  `NAME_` varchar(255)  DEFAULT NULL,
  `PARENT_TASK_ID_` varchar(64)  DEFAULT NULL,
  `DESCRIPTION_` varchar(4000)  DEFAULT NULL,
  `TASK_DEF_KEY_` varchar(255)  DEFAULT NULL,
  `OWNER_` varchar(255)  DEFAULT NULL,
  `ASSIGNEE_` varchar(255)  DEFAULT NULL,
  `DELEGATION_` varchar(64)  DEFAULT NULL,
  `PRIORITY_` int DEFAULT NULL,
  `CREATE_TIME_` datetime DEFAULT NULL,
  `LAST_UPDATED_` datetime DEFAULT NULL,
  `DUE_DATE_` datetime DEFAULT NULL,
  `FOLLOW_UP_DATE_` datetime DEFAULT NULL,
  `SUSPENSION_STATE_` int DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  `TASK_STATE_` varchar(64)  DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_TASK_CREATE` (`CREATE_TIME_`),
  KEY `ACT_IDX_TASK_LAST_UPDATED` (`LAST_UPDATED_`),
  KEY `ACT_IDX_TASK_ASSIGNEE` (`ASSIGNEE_`),
  KEY `ACT_IDX_TASK_OWNER` (`OWNER_`),
  KEY `ACT_IDX_TASK_TENANT_ID` (`TENANT_ID_`),
  KEY `ACT_FK_TASK_EXE` (`EXECUTION_ID_`),
  KEY `ACT_FK_TASK_PROCINST` (`PROC_INST_ID_`),
  KEY `ACT_FK_TASK_PROCDEF` (`PROC_DEF_ID_`),
  KEY `ACT_FK_TASK_CASE_EXE` (`CASE_EXECUTION_ID_`),
  KEY `ACT_FK_TASK_CASE_DEF` (`CASE_DEF_ID_`),
  CONSTRAINT `ACT_FK_TASK_CASE_DEF` FOREIGN KEY (`CASE_DEF_ID_`) REFERENCES `ACT_RE_CASE_DEF` (`ID_`),
  CONSTRAINT `ACT_FK_TASK_CASE_EXE` FOREIGN KEY (`CASE_EXECUTION_ID_`) REFERENCES `ACT_RU_CASE_EXECUTION` (`ID_`),
  CONSTRAINT `ACT_FK_TASK_EXE` FOREIGN KEY (`EXECUTION_ID_`) REFERENCES `ACT_RU_EXECUTION` (`ID_`),
  CONSTRAINT `ACT_FK_TASK_PROCDEF` FOREIGN KEY (`PROC_DEF_ID_`) REFERENCES `ACT_RE_PROCDEF` (`ID_`),
  CONSTRAINT `ACT_FK_TASK_PROCINST` FOREIGN KEY (`PROC_INST_ID_`) REFERENCES `ACT_RU_EXECUTION` (`ID_`)
) ;

-- ----------------------------
-- Table structure for ACT_RU_TASK_METER_LOG
-- ----------------------------
DROP TABLE IF EXISTS `ACT_RU_TASK_METER_LOG`;
CREATE TABLE `ACT_RU_TASK_METER_LOG` (
  `ID_` varchar(64)  NOT NULL,
  `ASSIGNEE_HASH_` bigint DEFAULT NULL,
  `TIMESTAMP_` datetime DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  KEY `ACT_IDX_TASK_METER_LOG_TIME` (`TIMESTAMP_`)
) ;

-- ----------------------------
-- Table structure for ACT_RU_VARIABLE
-- ----------------------------
DROP TABLE IF EXISTS `ACT_RU_VARIABLE`;
CREATE TABLE `ACT_RU_VARIABLE` (
  `ID_` varchar(64)  NOT NULL,
  `REV_` int DEFAULT NULL,
  `TYPE_` varchar(255)  NOT NULL,
  `NAME_` varchar(255)  NOT NULL,
  `EXECUTION_ID_` varchar(64)  DEFAULT NULL,
  `PROC_INST_ID_` varchar(64)  DEFAULT NULL,
  `PROC_DEF_ID_` varchar(64)  DEFAULT NULL,
  `CASE_EXECUTION_ID_` varchar(64)  DEFAULT NULL,
  `CASE_INST_ID_` varchar(64)  DEFAULT NULL,
  `TASK_ID_` varchar(64)  DEFAULT NULL,
  `BATCH_ID_` varchar(64)  DEFAULT NULL,
  `BYTEARRAY_ID_` varchar(64)  DEFAULT NULL,
  `DOUBLE_` double DEFAULT NULL,
  `LONG_` bigint DEFAULT NULL,
  `TEXT_` varchar(4000)  DEFAULT NULL,
  `TEXT2_` varchar(4000)  DEFAULT NULL,
  `VAR_SCOPE_` varchar(64)  NOT NULL,
  `SEQUENCE_COUNTER_` bigint DEFAULT NULL,
  `IS_CONCURRENT_LOCAL_` tinyint DEFAULT NULL,
  `TENANT_ID_` varchar(64)  DEFAULT NULL,
  PRIMARY KEY (`ID_`),
  UNIQUE KEY `ACT_UNIQ_VARIABLE` (`VAR_SCOPE_`,`NAME_`),
  KEY `ACT_IDX_VARIABLE_TASK_ID` (`TASK_ID_`),
  KEY `ACT_IDX_VARIABLE_TENANT_ID` (`TENANT_ID_`),
  KEY `ACT_IDX_VARIABLE_TASK_NAME_TYPE` (`TASK_ID_`,`NAME_`,`TYPE_`),
  KEY `ACT_FK_VAR_EXE` (`EXECUTION_ID_`),
  KEY `ACT_FK_VAR_PROCINST` (`PROC_INST_ID_`),
  KEY `ACT_FK_VAR_BYTEARRAY` (`BYTEARRAY_ID_`),
  KEY `ACT_IDX_BATCH_ID` (`BATCH_ID_`),
  KEY `ACT_FK_VAR_CASE_EXE` (`CASE_EXECUTION_ID_`),
  KEY `ACT_FK_VAR_CASE_INST` (`CASE_INST_ID_`),
  CONSTRAINT `ACT_FK_VAR_BATCH` FOREIGN KEY (`BATCH_ID_`) REFERENCES `ACT_RU_BATCH` (`ID_`),
  CONSTRAINT `ACT_FK_VAR_BYTEARRAY` FOREIGN KEY (`BYTEARRAY_ID_`) REFERENCES `ACT_GE_BYTEARRAY` (`ID_`),
  CONSTRAINT `ACT_FK_VAR_CASE_EXE` FOREIGN KEY (`CASE_EXECUTION_ID_`) REFERENCES `ACT_RU_CASE_EXECUTION` (`ID_`),
  CONSTRAINT `ACT_FK_VAR_CASE_INST` FOREIGN KEY (`CASE_INST_ID_`) REFERENCES `ACT_RU_CASE_EXECUTION` (`ID_`),
  CONSTRAINT `ACT_FK_VAR_EXE` FOREIGN KEY (`EXECUTION_ID_`) REFERENCES `ACT_RU_EXECUTION` (`ID_`),
  CONSTRAINT `ACT_FK_VAR_PROCINST` FOREIGN KEY (`PROC_INST_ID_`) REFERENCES `ACT_RU_EXECUTION` (`ID_`)
) ;

SET FOREIGN_KEY_CHECKS = 1;

/*************************************************************************************************/
/**************************************** camunda ************************************************/
/*************************************************************************************************/




/*************************************************************************************************/
/**************************************** XXL JOB ************************************************/
/*************************************************************************************************/

CREATE TABLE `xxl_job_info` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `job_group` int(11) NOT NULL COMMENT '执行器主键ID',
  `job_desc` varchar(255) NOT NULL,
  `add_time` datetime DEFAULT NULL,
  `update_time` datetime DEFAULT NULL,
  `author` varchar(64) DEFAULT NULL COMMENT '作者',
  `alarm_email` varchar(255) DEFAULT NULL COMMENT '报警邮件',
  `schedule_type` varchar(50) NOT NULL DEFAULT 'NONE' COMMENT '调度类型',
  `schedule_conf` varchar(128) DEFAULT NULL COMMENT '调度配置，值含义取决于调度类型',
  `misfire_strategy` varchar(50) NOT NULL DEFAULT 'DO_NOTHING' COMMENT '调度过期策略',
  `executor_route_strategy` varchar(50) DEFAULT NULL COMMENT '执行器路由策略',
  `executor_handler` varchar(255) DEFAULT NULL COMMENT '执行器任务handler',
  `executor_param` varchar(512) DEFAULT NULL COMMENT '执行器任务参数',
  `executor_block_strategy` varchar(50) DEFAULT NULL COMMENT '阻塞处理策略',
  `executor_timeout` int(11) NOT NULL DEFAULT '0' COMMENT '任务执行超时时间，单位秒',
  `executor_fail_retry_count` int(11) NOT NULL DEFAULT '0' COMMENT '失败重试次数',
  `glue_type` varchar(50) NOT NULL COMMENT 'GLUE类型',
  `glue_source` mediumtext COMMENT 'GLUE源代码',
  `glue_remark` varchar(128) DEFAULT NULL COMMENT 'GLUE备注',
  `glue_updatetime` datetime DEFAULT NULL COMMENT 'GLUE更新时间',
  `child_jobid` varchar(255) DEFAULT NULL COMMENT '子任务ID，多个逗号分隔',
  `trigger_status` tinyint(4) NOT NULL DEFAULT '0' COMMENT '调度状态：0-停止，1-运行',
  `trigger_last_time` bigint(13) NOT NULL DEFAULT '0' COMMENT '上次调度时间',
  `trigger_next_time` bigint(13) NOT NULL DEFAULT '0' COMMENT '下次调度时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE `xxl_job_log` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `job_group` int(11) NOT NULL COMMENT '执行器主键ID',
  `job_id` int(11) NOT NULL COMMENT '任务，主键ID',
  `executor_address` varchar(255) DEFAULT NULL COMMENT '执行器地址，本次执行的地址',
  `executor_handler` varchar(255) DEFAULT NULL COMMENT '执行器任务handler',
  `executor_param` varchar(512) DEFAULT NULL COMMENT '执行器任务参数',
  `executor_sharding_param` varchar(20) DEFAULT NULL COMMENT '执行器任务分片参数，格式如 1/2',
  `executor_fail_retry_count` int(11) NOT NULL DEFAULT '0' COMMENT '失败重试次数',
  `trigger_time` datetime DEFAULT NULL COMMENT '调度-时间',
  `trigger_code` int(11) NOT NULL COMMENT '调度-结果',
  `trigger_msg` text COMMENT '调度-日志',
  `handle_time` datetime DEFAULT NULL COMMENT '执行-时间',
  `handle_code` int(11) NOT NULL COMMENT '执行-状态',
  `handle_msg` text COMMENT '执行-日志',
  `alarm_status` tinyint(4) NOT NULL DEFAULT '0' COMMENT '告警状态：0-默认、1-无需告警、2-告警成功、3-告警失败',
  PRIMARY KEY (`id`),
  KEY `I_trigger_time` (`trigger_time`),
  KEY `I_handle_code` (`handle_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE `xxl_job_log_report` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `trigger_day` datetime DEFAULT NULL COMMENT '调度-时间',
  `running_count` int(11) NOT NULL DEFAULT '0' COMMENT '运行中-日志数量',
  `suc_count` int(11) NOT NULL DEFAULT '0' COMMENT '执行成功-日志数量',
  `fail_count` int(11) NOT NULL DEFAULT '0' COMMENT '执行失败-日志数量',
  `update_time` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `i_trigger_day` (`trigger_day`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE `xxl_job_logglue` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `job_id` int(11) NOT NULL COMMENT '任务，主键ID',
  `glue_type` varchar(50) DEFAULT NULL COMMENT 'GLUE类型',
  `glue_source` mediumtext COMMENT 'GLUE源代码',
  `glue_remark` varchar(128) NOT NULL COMMENT 'GLUE备注',
  `add_time` datetime DEFAULT NULL,
  `update_time` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE `xxl_job_registry` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `registry_group` varchar(50) NOT NULL,
  `registry_key` varchar(255) NOT NULL,
  `registry_value` varchar(255) NOT NULL,
  `update_time` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `i_g_k_v` (`registry_group`,`registry_key`,`registry_value`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE `xxl_job_group` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app_name` varchar(64) NOT NULL COMMENT '执行器AppName',
  `title` varchar(12) NOT NULL COMMENT '执行器名称',
  `address_type` tinyint(4) NOT NULL DEFAULT '0' COMMENT '执行器地址类型：0=自动注册、1=手动录入',
  `address_list` text COMMENT '执行器地址列表，多地址逗号分隔',
  `update_time` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE `xxl_job_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(50) NOT NULL COMMENT '账号',
  `password` varchar(50) NOT NULL COMMENT '密码',
  `role` tinyint(4) NOT NULL COMMENT '角色：0-普通用户、1-管理员',
  `permission` varchar(255) DEFAULT NULL COMMENT '权限：执行器ID列表，多个逗号分割',
  PRIMARY KEY (`id`),
  UNIQUE KEY `i_username` (`username`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE `xxl_job_lock` (
  `lock_name` varchar(50) NOT NULL COMMENT '锁名称',
  PRIMARY KEY (`lock_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

INSERT INTO `xxl_job_group`(`id`, `app_name`, `title`, `address_type`, `address_list`, `update_time`) VALUES (1, 'xxl-job-executor-sample', '示例执行器', 0, NULL, '2018-11-03 22:21:31' );
INSERT INTO `xxl_job_info`(`id`, `job_group`, `job_desc`, `add_time`, `update_time`, `author`, `alarm_email`, `schedule_type`, `schedule_conf`, `misfire_strategy`, `executor_route_strategy`, `executor_handler`, `executor_param`, `executor_block_strategy`, `executor_timeout`, `executor_fail_retry_count`, `glue_type`, `glue_source`, `glue_remark`, `glue_updatetime`, `child_jobid`) VALUES (1, 1, '测试任务1', '2018-11-03 22:21:31', '2018-11-03 22:21:31', 'XXL', '', 'CRON', '0 0 0 * * ? *', 'DO_NOTHING', 'FIRST', 'demoJobHandler', '', 'SERIAL_EXECUTION', 0, 0, 'BEAN', '', 'GLUE代码初始化', '2018-11-03 22:21:31', '');
INSERT INTO `xxl_job_user`(`id`, `username`, `password`, `role`, `permission`) VALUES (1, 'admin', 'e10adc3949ba59abbe56e057f20f883e', 1, NULL);
INSERT INTO `xxl_job_lock` ( `lock_name`) VALUES ( 'schedule_lock');

/*************************************************************************************************/
/**************************************** XXL JOB ************************************************/
/*************************************************************************************************/
